{"version":3,"file":"index.es.js","sources":["../src/TallyMarks.vue","../src/index.ts"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, toRefs } from 'vue'\n\nexport interface TallyMarksProps {\n  /** The number to display as tally marks */\n  count: number\n  /** Color for highlighting the last mark or group */\n  highlightColor?: string\n  /** Size of the tally marks (small, medium, large, or custom px value) */\n  size?: 'small' | 'medium' | 'large' | string\n  /** Color of the tally marks */\n  color?: string\n  /** Whether to animate the tally marks appearing */\n  animated?: boolean\n  /** Animation delay between each mark (in ms) */\n  animationDelay?: number\n  /** Whether to show the numeric count alongside tally marks */\n  showCount?: boolean\n  /** Position of the count display */\n  countPosition?: 'before' | 'after' | 'above' | 'below'\n  /** Custom CSS class for styling */\n  customClass?: string\n  /** Accessibility label for screen readers */\n  ariaLabel?: string\n}\n\nconst props = withDefaults(defineProps<TallyMarksProps>(), {\n  highlightColor: '#e74c3c',\n  size: 'medium',\n  color: 'currentColor',\n  animated: false,\n  animationDelay: 100,\n  showCount: false,\n  countPosition: 'after',\n  customClass: '',\n  ariaLabel: ''\n})\n\nconst { count, size, color, animated, animationDelay } = toRefs(props)\n\nconst fullGroups = computed(() => Math.floor(props.count / 5))\nconst remainingMarks = computed(() => props.count % 5)\nconst hasRemainder = computed(() => remainingMarks.value > 0)\n\nconst isLastGroup = (index: number): boolean => {\n  return index === fullGroups.value - 1\n}\n\nconst sizeStyles = computed(() => {\n  const sizeMap = {\n    small: { fontSize: '0.9rem', gap: '4px', groupGap: '1px', diagonalWidth: '42px' },\n    medium: { fontSize: '1.2rem', gap: '6px', groupGap: '2px', diagonalWidth: '52px' },\n    large: { fontSize: '1.5rem', gap: '8px', groupGap: '3px', diagonalWidth: '62px' }\n  }\n  \n  if (props.size in sizeMap) {\n    return sizeMap[props.size as keyof typeof sizeMap]\n  }\n  \n  // Custom size (assuming it's a px value like \"16px\")\n  const customSize = props.size\n  const numericSize = parseInt(customSize) || 16\n  // Calculate diagonal width based on original ratio: 52px for 1.2rem (19.2px) = ~2.7x\n  const diagonalWidth = Math.round(numericSize * 2.7)\n  return {\n    fontSize: customSize,\n    gap: `${Math.max(4, numericSize * 0.3)}px`,\n    groupGap: `${Math.max(1, numericSize * 0.1)}px`,\n    diagonalWidth: `${diagonalWidth}px`\n  }\n})\n\nconst computedAriaLabel = computed(() => {\n  if (props.ariaLabel) return props.ariaLabel\n  return `Tally marks showing count of ${props.count}`\n})\n\nconst getAnimationDelay = (groupIndex: number, markIndex?: number): string => {\n  if (!props.animated) return '0s'\n  \n  const baseDelay = groupIndex * 5 * props.animationDelay\n  const markDelay = markIndex !== undefined ? markIndex * props.animationDelay : 0\n  return `${(baseDelay + markDelay) / 1000}s`\n}\n</script>\n\n<template>\n  <div \n    :class=\"['tally-marks-container', customClass]\"\n    :aria-label=\"computedAriaLabel\"\n    role=\"img\"\n  >\n    <!-- Count display above -->\n    <div v-if=\"showCount && countPosition === 'above'\" class=\"tally-count tally-count--above\">\n      {{ count }}\n    </div>\n    \n    <div class=\"tally-marks-wrapper\">\n      <!-- Count display before -->\n      <span v-if=\"showCount && countPosition === 'before'\" class=\"tally-count tally-count--before\">\n        {{ count }}\n      </span>\n      \n      <div \n        class=\"tally-marks\"\n        :style=\"{\n          gap: sizeStyles.gap,\n          color: color\n        }\"\n      >\n        <!-- Render full groups of 5 -->\n        <div\n          v-for=\"(group, index) in fullGroups\"\n          :key=\"'group-' + index\"\n          class=\"tally-group\"\n          :style=\"{\n            gap: sizeStyles.groupGap,\n            animationDelay: getAnimationDelay(index)\n          }\"\n          :class=\"{ 'tally-group--animated': animated }\"\n        >\n          <span \n            v-for=\"markIndex in 4\"\n            :key=\"'mark-' + markIndex\"\n            class=\"mark\"\n            :style=\"{\n              fontSize: sizeStyles.fontSize,\n              animationDelay: getAnimationDelay(index, markIndex - 1)\n            }\"\n            :class=\"{ 'mark--animated': animated }\"\n          >|</span>\n          <span\n            class=\"diagonal\"\n            :style=\"{ \n              backgroundColor: isLastGroup(index) && !hasRemainder ? highlightColor : 'black',\n              width: sizeStyles.diagonalWidth,\n              animationDelay: getAnimationDelay(index, 4)\n            }\"\n            :class=\"{ 'diagonal--animated': animated }\"\n          />\n        </div>\n\n        <!-- Render leftover marks (less than 5) -->\n        <div \n          v-if=\"remainingMarks > 0\" \n          class=\"tally-group\"\n          :style=\"{\n            gap: sizeStyles.groupGap,\n            animationDelay: getAnimationDelay(fullGroups)\n          }\"\n          :class=\"{ 'tally-group--animated': animated }\"\n        >\n          <span\n            v-for=\"mark in remainingMarks\"\n            :key=\"'mark-' + mark\"\n            class=\"mark\"\n            :style=\"{\n              fontSize: sizeStyles.fontSize,\n              color: mark === remainingMarks ? highlightColor : color,\n              animationDelay: getAnimationDelay(fullGroups, mark - 1)\n            }\"\n            :class=\"{ 'mark--animated': animated }\"\n          >|</span>\n        </div>\n      </div>\n      \n      <!-- Count display after -->\n      <span v-if=\"showCount && countPosition === 'after'\" class=\"tally-count tally-count--after\">\n        {{ count }}\n      </span>\n    </div>\n    \n    <!-- Count display below -->\n    <div v-if=\"showCount && countPosition === 'below'\" class=\"tally-count tally-count--below\">\n      {{ count }}\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.tally-marks-container {\n  display: inline-block;\n}\n\n.tally-marks-wrapper {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.tally-marks {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 6px;\n}\n\n.tally-group {\n  position: relative;\n  display: flex;\n  align-items: center;\n  gap: 2px;\n}\n\n.mark {\n  font-size: 1.2rem;\n  font-weight: bold;\n  font-family: monospace;\n  line-height: 1;\n  user-select: none;\n}\n\n.diagonal {\n  position: absolute;\n  top: 1px;\n  left: 1px;\n  width: 52px;\n  height: 2px;\n  background-color: black;\n  transform: rotate(21deg);\n  transform-origin: left center;\n  pointer-events: none;\n}\n\n.tally-count {\n  font-weight: bold;\n  font-family: system-ui, -apple-system, sans-serif;\n}\n\n.tally-count--above,\n.tally-count--below {\n  text-align: center;\n  margin: 4px 0;\n}\n\n.tally-count--before {\n  margin-right: 8px;\n}\n\n.tally-count--after {\n  margin-left: 8px;\n}\n\n/* Animation styles */\n.tally-group--animated {\n  opacity: 0;\n  animation: fadeInUp 0.3s ease-out forwards;\n}\n\n.mark--animated {\n  opacity: 0;\n  transform: translateY(10px);\n  animation: fadeInUp 0.2s ease-out forwards;\n}\n\n.diagonal--animated {\n  opacity: 0;\n  transform: translateY(10px) rotate(21deg);\n  animation: fadeInDiagonal 0.3s ease-out forwards;\n}\n\n@keyframes fadeInUp {\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeInDiagonal {\n  to {\n    opacity: 1;\n    transform: translateY(0) rotate(21deg);\n  }\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .tally-marks {\n    gap: 4px;\n  }\n  \n  .tally-group {\n    gap: 1px;\n  }\n}\n\n/* High contrast mode support */\n@media (prefers-contrast: high) {\n  .mark {\n    font-weight: 900;\n  }\n  \n  .diagonal {\n    height: 3px;\n  }\n}\n\n/* Reduced motion support */\n@media (prefers-reduced-motion: reduce) {\n  .tally-group--animated,\n  .mark--animated,\n  .diagonal--animated {\n    animation: none;\n    opacity: 1;\n    transform: none;\n  }\n}\n</style>","import { App } from 'vue'\nimport TallyMarks from './TallyMarks.vue'\nimport type { TallyMarksProps } from './TallyMarks.vue'\n\n// Export the component\nexport { default as TallyMarks } from './TallyMarks.vue'\nexport type { TallyMarksProps }\n\n// Plugin install function for global registration\nexport function install(app: App) {\n  app.component('TallyMarks', TallyMarks)\n}\n\n// Default export for plugin usage\nexport default {\n  install\n}\n\n// Auto-install when used via CDN or when Vue is available globally\nif (typeof window !== 'undefined' && (window as any).Vue) {\n  (window as any).Vue.use({ install })\n}"],"names":["props","__props","count","size","color","animated","animationDelay","toRefs","fullGroups","computed","remainingMarks","hasRemainder","isLastGroup","index","sizeStyles","sizeMap","customSize","numericSize","diagonalWidth","computedAriaLabel","getAnimationDelay","groupIndex","markIndex","baseDelay","markDelay","_createElementBlock","_hoisted_2","_toDisplayString","_unref","_createElementVNode","_hoisted_3","_hoisted_4","_normalizeStyle","_openBlock","_Fragment","_renderList","group","_normalizeClass","mark","_hoisted_5","_hoisted_6","install","app","TallyMarks"],"mappings":"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"}